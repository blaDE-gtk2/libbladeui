CLEANFILES =
lib_LTLIBRARIES =
pkgconfig_DATA =

AM_CPPFLAGS = \
	-DGLIB_DISABLE_DEPRECATION_WARNINGS \
	-I$(top_srcdir) \
	-DDATADIR=\"$(datadir)\" \
	-DSN_API_NOT_YET_FROZEN \
	-DLIBBLADEUI_COMPILATION \
	-DG_LOG_DOMAIN=\"libbladeui\" \
	-DLIBEXECDIR=\"$(libexecdir)\" \
	-DLIBBLADEUI_VERSION_API=\"$(LIBBLADEUI_VERSION_API)\" \
	-DPACKAGE_LOCALE_DIR=\"$(localedir)\" \
	$(PLATFORM_CPPFLAGS)

libbladeui_enum_headers = \
	xfce-sm-client.h

libbladeui_headers = \
	libbladeui.h \
	libbladeui-config.h \
	libbladeui-enum-types.h \
	xfce-dialogs.h \
	xfce-gdk-extensions.h \
	xfce-gtk-extensions.h \
	xfce-spawn.h \
	xfce-titled-dialog.h \
	$(libbladeui_enum_headers)

libbladeui_built_sources = \
	libbladeui-alias.h \
	libbladeui-aliasdef.c \
	libbladeui-enum-types.c \
	libbladeui-enum-types.h \
	libbladeui-marshal.c \
	libbladeui-marshal.h \
	libbladeui-resources.c \
	libbladeui-resources.h

libbladeui_sources = \
	$(libbladeui_headers) \
	$(libbladeui_built_sources) \
	libbladeui-config.c \
	libbladeui-private.h \
	xfce-dialogs.c \
	xfce-gdk-extensions.c \
	xfce-gtk-extensions.c \
	xfce-heading.c \
	xfce-heading.h \
	xfce-sm-client.c \
	xfce-spawn.c \
	xfce-titled-dialog.c

libbladeui_includedir = \
	$(includedir)/xfce4/libbladeui-$(LIBBLADEUI_VERSION_API)/libbladeui

libbladeui_include_HEADERS = \
	$(libbladeui_headers)




##
## GTK+ 3 support library
##

libbladeui2_includedir = \
	$(includedir)/xfce4/libbladeui-2/libbladeui

libbladeui2_include_HEADERS = \
	$(libbladeui_headers)

lib_LTLIBRARIES += \
	libbladeui-2.la

libbladeui_2_la_SOURCES = \
	$(libbladeui_sources)

libbladeui_2_la_CFLAGS = \
	$(LIBSM_CFLAGS) \
	$(GTK3_CFLAGS) \
	$(LIBSTARTUP_NOTIFICATION_CFLAGS) \
	$(LIBBLADEUTIL_CFLAGS) \
	$(PLATFORM_CFLAGS)

libbladeui_2_la_LDFLAGS = \
	-version-info $(LIBBLADEUI_VERINFO) \
	-export-symbols-regex "^[^_].*" \
	-no-undefined \
	$(LIBSM_LDFLAGS) \
	$(PLATFORM_LDFLAGS)

libbladeui_2_la_LIBADD = \
	$(LIBSM_LIBS) \
	$(GTK3_LIBS) \
	$(LIBSTARTUP_NOTIFICATION_LIBS) \
	$(LIBBLADEUTIL_LIBS)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA += \
	libbladeui-2.pc


LIBBLADEUI_RESOURCE_FILES = \
	libbladeui-dialog-ui.ui \
	$(NULL)

include $(INTROSPECTION_MAKEFILE)
INTROSPECTION_GIRS =
INTROSPECTION_SCANNER_ENV = CC="$(CC)"
INTROSPECTION_SCANNER_ARGS = \
	--add-include-path=$(srcdir) \
	--add-include-path=$(prefix)/share/gir-1.0 \
	--warn-all \
	--identifier-prefix=Xfce \
	--identifier-prefix=xfce \
	--identifier-prefix=libxfce \
	--c-include=libbladeui/libbladeui.h
INTROSPECTION_COMPILER_ARGS = \
	--includedir=$(srcdir) \
	--includedir=$(prefix)/share/gir-1.0 \
	--includedir=.

if HAVE_INTROSPECTION
introspection_sources = $(libbladeui_2_la_SOURCES)

libbladeui-2.0.gir: libbladeui-2.la Makefile
libbladeui_2_0_gir_INCLUDES = GObject-2.0 GLib-2.0 Gtk-3.0 libbladeutil-1.0
libbladeui_2_0_gir_CFLAGS = $(AM_CPPFLAGS)
libbladeui_2_0_gir_LIBS = libbladeui-2.la
libbladeui_2_0_gir_FILES = $(introspection_sources)
libbladeui_2_0_gir_EXPORT_PACKAGES = libbladeui-2
INTROSPECTION_GIRS += libbladeui-2.0.gir

girdir = $(datadir)/gir-1.0
gir_DATA = $(INTROSPECTION_GIRS)

typelibdir = $(libdir)/girepository-1.0
typelib_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)

CLEANFILES += $(gir_DATA) $(typelib_DATA)
endif
# endif HAVE_INTROSPECTION


##
## GTK+ 2 support library
##
if ENABLE_GTK2_LIBRARY

lib_LTLIBRARIES += \
	libbladeui-1.la

libbladeui_1_la_SOURCES = \
	$(libbladeui_sources)

libbladeui_1_la_CFLAGS = \
	$(LIBSM_CFLAGS) \
	$(GTK2_CFLAGS) \
	$(LIBSTARTUP_NOTIFICATION_CFLAGS) \
	$(LIBBLADEUTIL_CFLAGS) \
	$(PLATFORM_CFLAGS)

libbladeui_1_la_LDFLAGS = \
	-version-info $(LIBBLADEUI_VERINFO) \
	-export-symbols-regex "^[^_].*" \
	-no-undefined \
	$(LIBSM_LDFLAGS) \
	$(PLATFORM_LDFLAGS)

libbladeui_1_la_LIBADD = \
	$(LIBSM_LIBS) \
	$(GTK2_LIBS) \
	$(LIBSTARTUP_NOTIFICATION_LIBS) \
	$(LIBBLADEUTIL_LIBS)

pkgconfig_DATA += \
	libbladeui-1.pc


endif

##
## Rules to auto-generate built sources
##
## This is a bit tricky with automake, and non-trivial to implement. The
## rules below seem to work fine and don't seem to break the build, but
## they are only enabled in maintainer mode, so arbitrary users don't get
## trapped in automake's oddities. Therefore we ship the autogenerated
## files as part of the dist tarball.
##
if MAINTAINER_MODE
CLEANFILES += \
	actual-abi \
	expected-abi

DISTCLEANFILES = \
	stamp-libbladeui-marshal.h \
	$(libbladeui_built_sources)

BUILT_SOURCES = \
	$(libbladeui_built_sources)

libbladeui-alias.h: make-libbladeui-alias.pl libbladeui.symbols
	$(AM_V_GEN) $(PERL) $(srcdir)/make-libbladeui-alias.pl < $(srcdir)/libbladeui.symbols > libbladeui-alias.h

libbladeui-aliasdef.c: make-libbladeui-alias.pl libbladeui.symbols
	$(AM_V_GEN) $(PERL) $(srcdir)/make-libbladeui-alias.pl -def < $(srcdir)/libbladeui.symbols > libbladeui-aliasdef.c

libbladeui-marshal.h: stamp-libbladeui-marshal.h
	@true
stamp-libbladeui-marshal.h: libbladeui-marshal.list Makefile
	$(AM_V_GEN) glib-genmarshal --prefix=_libbladeui_marshal --header $(srcdir)/libbladeui-marshal.list >xgen-lmh
	cmp -s xgen-lmh libxfce4-marshal.h || cp xgen-lmh libbladeui-marshal.h
	rm -f xgen-lmh
	echo timestamp >$(@F)

libbladeui-marshal.c: libbladeui-marshal.list Makefile
	$(AM_V_GEN) echo "#include <libbladeui/libbladeui-marshal.h>" > xgen-lmc
	glib-genmarshal --prefix=_libbladeui_marshal --body $(srcdir)/libbladeui-marshal.list >>xgen-lmc
	cmp -s xgen-lmc libxfce4-marshal.c || cp xgen-lmc libbladeui-marshal.c
	rm -f xgen-lmc

libbladeui-enum-types.h: stamp-libbladeui-enum-types.h
	@true
stamp-libbladeui-enum-types.h: $(libbladeui_enum_headers) Makefile
	$(AM_V_GEN) ( cd $(srcdir) && glib-mkenums \
		--fhead "#ifndef __LIBBLADEUI_ENUM_TYPES_H__\n#define __LIBBLADEUI_ENUM_TYPES_H__\n\nG_BEGIN_DECLS\n\n" \
		--fprod "/* enumerations from \"@filename@\" */\n\n" \
		--vhead "GType @enum_name@_get_type(void) G_GNUC_CONST;\n#define XFCE_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n\n" \
		--ftail "G_END_DECLS\n\n#endif /* !__LIBBLADEUI_ENUM_TYPES_H__ */" \
		$(libbladeui_enum_headers) ) >xgen-leth
	cmp -s xgen-leth libbladeui-enum-types.h || cp xgen-leth libbladeui-enum-types.h
	rm -f xgen-leth
	echo timestamp > $(@F)
libbladeui-enum-types.c: $(libbladeui_enum_headers) Makefile
	$(AM_V_GEN) ( cd $(srcdir) && glib-mkenums \
		--fhead "#include <libbladeui/libbladeui.h>\n#include <libbladeui/libbladeui-alias.h>\n\n" \
		--fprod "/* enumerations from \"@filename@\" */\n\n" \
		--vhead "GType\n@enum_name@_get_type(void)\n{\n    static GType type = 0;\n\n    if(!type) {\n        static const G@Type@Value values[] = {"\
		--vprod "            { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		--vtail "            { 0, NULL, NULL }\n\t};\n\ttype = g_@type@_register_static(\"@EnumName@\", values);\n    }\n\n    return type;\n}\n\n" \
		--ftail "\n#define __LIBBLADEUI_ENUM_TYPES_C__\n#include <libbladeui/libbladeui-aliasdef.c>\n" \
		$(libbladeui_enum_headers) ) > xgen-letc
	cp xgen-letc libbladeui-enum-types.c
	rm -f xgen-letc

libbladeui-resources.c: libbladeui.gresource.xml $(LIBBLADEUI_RESOURCE_FILES)
	$(AM_V_GEN)$(GLIB_COMPILE_RESOURCES) --target=$@ --sourcedir=$(srcdir) --generate-source --internal --c-name libbladeui libbladeui.gresource.xml
libbladeui-resources.h: libbladeui.gresource.xml $(LIBBLADEUI_RESOURCE_FILES)
	$(AM_V_GEN)$(GLIB_COMPILE_RESOURCES) --target=$@ --sourcedir=$(srcdir) --generate-header --internal --c-name libbladeui libbladeui.gresource.xml

endif

# required for gtk-doc
dist-hook: all

EXTRA_DIST = \
	abicheck.sh \
	libbladeui.gresource.xml \
	$(LIBBLADEUI_RESOURCE_FILES) \
	libbladeui.symbols \
	libbladeui-alias.h \
	libbladeui-aliasdef.c \
	libbladeui-marshal.list \
	make-libbladeui-alias.pl

if ENABLE_VAPIGEN
-include $(VAPIGEN_MAKEFILE)

libbladeui-2.vapi: libbladeui-2.0.gir libbladeui-2.deps

VAPIGEN_VAPIS = libbladeui-2.vapi
VAPIGEN_GIRDIRS = $(prefix)/share/gir-1.0

libbladeui_2_vapi_METADATADIRS = .
libbladeui_2_vapi_FILES = libbladeui-2.0.gir

vapidir = $(datadir)/vala/vapi
vapi_DATA = $(VAPIGEN_VAPIS) $(VAPIGEN_VAPIS:.vapi=.deps)

EXTRA_DIST += libbladeui-2.0.metadata libbladeui-2.deps
endif

if HAVE_GNUC_VISIBILITY
TESTS = abicheck.sh
endif

# vi:set ts=8 sw=8 noet ai nocindent syntax=automake:
